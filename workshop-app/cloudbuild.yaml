# Sample cloudbuild.yaml that can containerize a Java app with JFrog Artifactory as a source of truth.
# NOTE: JFrog cloud builder image should exist. cloudbuild.yaml to build JFrog cloud builder image exists one level up.

# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

substitutions:
  _JFROG_SERVER_NAME: <servername>.jfrog.io
  _JFROG_USER: <name>@<yourcompany>.com
  _JFROG_API_KEY: <password>
  _JFROG_REPO_NAME: clouddays
  _JFROG_CLI_VERSION: 1.40.1

steps:
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'login'
  - '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/java-app'
  - '-u'
  - '${_JFROG_USER}'
  - '-p'
  - '${_JFROG_API_KEY}'

- name: '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/jfrog-cli:${_JFROG_CLI_VERSION}'
  entrypoint: 'bash'
  args: ['-c', 'jfrog rt c ${_JFROG_REPO_NAME} --url=https://${_JFROG_SERVER_NAME}/artifactory --user=${_JFROG_USER} --apikey=${_JFROG_API_KEY}']
  secretEnv: ['API_KEY']
  dir: 'npm-example'

# Build a sample npm project
- name: '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/jfrog-cli:${_JFROG_CLI_VERSION}'
  args: ['-c','jfrog rt npm-install --build-name=npm-build --build-number=$BUILD_ID']
  dir: 'npm-example'

# Containerize npm app
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--tag=${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/npm-app:$BUILD_ID'
  - '.'
  dir: 'npm-example'

- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'jfrog rt docker-push ${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/npm-app:latest --build-name=npm_build --build-number=1']


images:
- '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/npm-app:latest'
tags: ['cloud-builders-community']
