<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Setup Workshop on JFrog DevOps Modernization Workshop</title>
    <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup.html</link>
    <description>Recent content in Setup Workshop on JFrog DevOps Modernization Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://jfrogtraining.github.io/clouddays/4_workshop_setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get Artifactory API Key</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/41_get_artifactory_api_key.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/41_get_artifactory_api_key.html</guid>
      <description>Now let&amp;rsquo;s get an API key for our Free Tier JFrog Platform instance. This will be used by Google&amp;rsquo;s cloud build and JFrog CLI to access artifactory instance.
  Go to your JFrog Platform instance at https://[server name].jfrog.io. Refer to your JFrog Free Subscription Activation email if needed. Substitute your server name.   Login to your JFrog Platform instance with your credentials.   Once logged into your JFrog Platform instance, you will be presented with the landing page.</description>
    </item>
    
    <item>
      <title>Create Docker Repository</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/42_create_docker_repo.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/42_create_docker_repo.html</guid>
      <description>Next, we will create a docker repo to store our docker images
1 . Log into your free tier account. Click on your name and then &amp;ldquo;New Local Repository&amp;rdquo; as shown below
2 . A popup will ask for repository type you want to create, select docker
3 . Enter clouddays as your repo name and click Save &amp;amp; Finish</description>
    </item>
    
    <item>
      <title>Start GCP Cloud Shell</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/43_start_gcp_cloud_shell.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/43_start_gcp_cloud_shell.html</guid>
      <description>You can configure gcloud CLI on your local machine, however that is beyond the scope of this workshop.
Fortunately, google provides an easy way to start a pre configured shell inside your google cloud console. We will use this mechanism.
On the top right, you see a &amp;gt;_ icon, click on it and it will start a shell that is pre-configured with your credentials.
This command should result in successful install.</description>
    </item>
    
    <item>
      <title>Clone Git Repository</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/44_clone_git_repo.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/44_clone_git_repo.html</guid>
      <description>Next, let&amp;rsquo;s clone git repo. In your cloud shell, use following command
git clone https://github.com/jfrogtraining/clouddays.git </description>
    </item>
    
    <item>
      <title>Declare environment variables</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/45_declare_variables.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/45_declare_variables.html</guid>
      <description>We need to declare following variables
PROJECT_ID _ARTIFACTORY_SERVER_NAME _ARTIFACTORY_USER _ARTIFACTORY_PASSWORD API_KEY To make it easy, we have a script for you. In your google cloud shell, first cd into newly cloned repo folder
cd clouddays Then run following command
. ./scripts/set_env.sh </description>
    </item>
    
    <item>
      <title>Start GKE Cluster</title>
      <link>https://jfrogtraining.github.io/clouddays/4_workshop_setup/46_start_gke_cluster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/clouddays/4_workshop_setup/46_start_gke_cluster.html</guid>
      <description>In this section, we will start a GKE Cluster. There are two ways to start a GKE cluster.
1 . We can go to our console and start a cluster from there.
2 . However, since we already have a cloud shell working, we can simply use gcloud CLI to start the cluster.
gcloud beta container --project &amp;quot;$PROJECT_ID&amp;quot; clusters create &amp;quot;jfrog-gke-devop-days-cluster&amp;quot; --zone &amp;quot;us-west1-a&amp;quot; --release-channel &amp;quot;rapid&amp;quot; --machine-type &amp;quot;e2-standard-2&amp;quot; --image-type &amp;quot;COS&amp;quot; --disk-type &amp;quot;pd-ssd&amp;quot; --disk-size &amp;quot;10&amp;quot; --num-nodes &amp;quot;1&amp;quot; --enable-stackdriver-kubernetes --enable-autoupgrade --enable-autorepair Note that we are using GKE functionality to</description>
    </item>
    
  </channel>
</rss>
